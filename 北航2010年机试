1.利用泰勒公式求cos(x)=1-x2/2!+x4/4!-……公式已给，重要的就是注意细节（比如阶乘的存储最好用double类型），二级C语言的难度。
#include <stdio.h>
#include <math.h>
 
#define PI 3.14159265358979323846
int main()
{
    int i=1;
    double x, x2, result=1, tmp1 = 1, tmp2 = 1, tmp3;
 
    printf("Input the times of PI:");
    scanf("%lf",&x); 
    x2 = PI*x*x*PI;//cos(pi*x)
 
    do
    {
            tmp1 *= x2;
            tmp2 *= ((2*i-1)*2*i);
            tmp3 = (tmp1/tmp2);
            if(i%2==0)
                result += tmp3;
            else
                result -= tmp3;
            i++;
    }while(tmp3>0.0000001||tmp3<-0.0000001);
 
    printf("result=%lf\n", result);
 
    return 0;
}

2.将两个升序字符串合并成一个升序字符串，相同的字母，出现一次。
#include<stdio.h>
#include<string.h>
int main(){
	char a[100],b[100],c[100];
	int i,j,k;
	scanf("%s%s",a,b);
	int len1=strlen(a),len2=strlen(b);
	i=j=k=0;
	while(i<len1&&j<len2){
		if(a[i]>b[j])c[k++]=b[j++];
		else if(a[i]<b[j])c[k++]=a[i++];
		else if(a[i]==b[j]){
			c[k++]=a[i++];
			j++;
		}
	}
	while(i<len1)c[k++]=a[i++];
	while(j<len2)c[k++]=b[j++];
	for(i=0;i<k;i++)printf("%c",c[i]);
	printf("\n");
	return 0;
}

3.两个整数数组（无序，可有重复元素），判断两个整数数组是否完全相同（重复元素的话，重复次数也要相同）
#include<iostream>
#include<cstdio>
using namespace std;
int a[100],b[100],n;
void sortnum(int num[]){
   int i,j,t,k;
   /*for(i=0;i<n-1;i++){
	   for(j=i+1;j<n;j++){
		   if(num[i]>num[j]){
			   int tmp=num[i];
               num[i]=num[j];
			   num[j]=tmp;
		   }
	   }
   }*/
   for(i=0;i<n-1;i++){
       t=i;
	   for(j=i+1;j<n;j++){
		   if(num[t]>num[j])
			   t=j;
	   }
	   if(t!=i){
	   k=num[t];num[t]=num[i];num[i]=k;
	   }
   }
}
int main(){
	int i,m;
    scanf("%d",&n);
	for(i=0;i<n;i++)scanf("%d",&a[i]);
	scanf("%d",&m);
	for(i=0;i<m;i++)scanf("%d",&b[i]);
	if(n==m){
	sortnum(a);
	sortnum(b);
	int f=1;
	for(i=0;i<n;i++)
		if(a[i]!=b[i]){
			f=0;break;
		}
	if(!f)printf("no\n");
	else printf("yes\n");
	}
	else printf("no\n");
	return 0;
}

